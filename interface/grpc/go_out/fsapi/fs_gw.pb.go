// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fs_gw.proto

package fsapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScaleDevRawData_CmdType int32

const (
	//上料
	ScaleDevRawData_UPLOAD_FODDER ScaleDevRawData_CmdType = 0
	//喂料
	ScaleDevRawData_FEED_FODDER ScaleDevRawData_CmdType = 1
)

var ScaleDevRawData_CmdType_name = map[int32]string{
	0: "UPLOAD_FODDER",
	1: "FEED_FODDER",
}

var ScaleDevRawData_CmdType_value = map[string]int32{
	"UPLOAD_FODDER": 0,
	"FEED_FODDER":   1,
}

func (x ScaleDevRawData_CmdType) String() string {
	return proto.EnumName(ScaleDevRawData_CmdType_name, int32(x))
}

func (ScaleDevRawData_CmdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{5, 0}
}

type PigstyInfo struct {
	//猪圈ID
	PigstyId string `protobuf:"bytes,1,opt,name=PigstyId,proto3" json:"PigstyId,omitempty"`
	//猪数量
	PigNum uint32 `protobuf:"varint,2,opt,name=PigNum,proto3" json:"PigNum,omitempty"`
	//猪平均重量,单位为“克”
	AverageWeight uint32 `protobuf:"varint,3,opt,name=AverageWeight,proto3" json:"AverageWeight,omitempty"`
	//喂料推荐值，单位为
	AdviseWeight uint32 `protobuf:"varint,4,opt,name=AdviseWeight,proto3" json:"AdviseWeight,omitempty"`
	//上次喂料时间戳 unix_timestamp
	LastFed uint32 `protobuf:"varint,5,opt,name=LastFed,proto3" json:"LastFed,omitempty"`
	//猪的id列表
	PigId                []string `protobuf:"bytes,6,rep,name=PigId,proto3" json:"PigId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PigstyInfo) Reset()         { *m = PigstyInfo{} }
func (m *PigstyInfo) String() string { return proto.CompactTextString(m) }
func (*PigstyInfo) ProtoMessage()    {}
func (*PigstyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{0}
}

func (m *PigstyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PigstyInfo.Unmarshal(m, b)
}
func (m *PigstyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PigstyInfo.Marshal(b, m, deterministic)
}
func (m *PigstyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PigstyInfo.Merge(m, src)
}
func (m *PigstyInfo) XXX_Size() int {
	return xxx_messageInfo_PigstyInfo.Size(m)
}
func (m *PigstyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PigstyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PigstyInfo proto.InternalMessageInfo

func (m *PigstyInfo) GetPigstyId() string {
	if m != nil {
		return m.PigstyId
	}
	return ""
}

func (m *PigstyInfo) GetPigNum() uint32 {
	if m != nil {
		return m.PigNum
	}
	return 0
}

func (m *PigstyInfo) GetAverageWeight() uint32 {
	if m != nil {
		return m.AverageWeight
	}
	return 0
}

func (m *PigstyInfo) GetAdviseWeight() uint32 {
	if m != nil {
		return m.AdviseWeight
	}
	return 0
}

func (m *PigstyInfo) GetLastFed() uint32 {
	if m != nil {
		return m.LastFed
	}
	return 0
}

func (m *PigstyInfo) GetPigId() []string {
	if m != nil {
		return m.PigId
	}
	return nil
}

type PigHouseInfo struct {
	//猪舍ID
	HouseId string `protobuf:"bytes,1,opt,name=HouseId,proto3" json:"HouseId,omitempty"`
	//猪圈信息
	PigstyInfo           []*PigstyInfo `protobuf:"bytes,2,rep,name=pigstyInfo,proto3" json:"pigstyInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PigHouseInfo) Reset()         { *m = PigHouseInfo{} }
func (m *PigHouseInfo) String() string { return proto.CompactTextString(m) }
func (*PigHouseInfo) ProtoMessage()    {}
func (*PigHouseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{1}
}

func (m *PigHouseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PigHouseInfo.Unmarshal(m, b)
}
func (m *PigHouseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PigHouseInfo.Marshal(b, m, deterministic)
}
func (m *PigHouseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PigHouseInfo.Merge(m, src)
}
func (m *PigHouseInfo) XXX_Size() int {
	return xxx_messageInfo_PigHouseInfo.Size(m)
}
func (m *PigHouseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PigHouseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PigHouseInfo proto.InternalMessageInfo

func (m *PigHouseInfo) GetHouseId() string {
	if m != nil {
		return m.HouseId
	}
	return ""
}

func (m *PigHouseInfo) GetPigstyInfo() []*PigstyInfo {
	if m != nil {
		return m.PigstyInfo
	}
	return nil
}

type DevInfoReq struct {
	//Version ,Devid ,Timestamp
	ReqHeader            *ReqHeader `protobuf:"bytes,1,opt,name=ReqHeader,proto3" json:"ReqHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DevInfoReq) Reset()         { *m = DevInfoReq{} }
func (m *DevInfoReq) String() string { return proto.CompactTextString(m) }
func (*DevInfoReq) ProtoMessage()    {}
func (*DevInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{2}
}

func (m *DevInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevInfoReq.Unmarshal(m, b)
}
func (m *DevInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevInfoReq.Marshal(b, m, deterministic)
}
func (m *DevInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevInfoReq.Merge(m, src)
}
func (m *DevInfoReq) XXX_Size() int {
	return xxx_messageInfo_DevInfoReq.Size(m)
}
func (m *DevInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DevInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_DevInfoReq proto.InternalMessageInfo

func (m *DevInfoReq) GetReqHeader() *ReqHeader {
	if m != nil {
		return m.ReqHeader
	}
	return nil
}

//
type PigstyInfoRes struct {
	//Version ,Devid ,Timestamp
	ReqHeader *ReqHeader `protobuf:"bytes,1,opt,name=ReqHeader,proto3" json:"ReqHeader,omitempty"`
	//猪场ID
	PigFarmId string `protobuf:"bytes,2,opt,name=PigFarmId,proto3" json:"PigFarmId,omitempty"`
	//猪场主人
	Farmer               string          `protobuf:"bytes,3,opt,name=farmer,proto3" json:"farmer,omitempty"`
	PigHouseInfo         []*PigHouseInfo `protobuf:"bytes,4,rep,name=pigHouseInfo,proto3" json:"pigHouseInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PigstyInfoRes) Reset()         { *m = PigstyInfoRes{} }
func (m *PigstyInfoRes) String() string { return proto.CompactTextString(m) }
func (*PigstyInfoRes) ProtoMessage()    {}
func (*PigstyInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{3}
}

func (m *PigstyInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PigstyInfoRes.Unmarshal(m, b)
}
func (m *PigstyInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PigstyInfoRes.Marshal(b, m, deterministic)
}
func (m *PigstyInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PigstyInfoRes.Merge(m, src)
}
func (m *PigstyInfoRes) XXX_Size() int {
	return xxx_messageInfo_PigstyInfoRes.Size(m)
}
func (m *PigstyInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PigstyInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_PigstyInfoRes proto.InternalMessageInfo

func (m *PigstyInfoRes) GetReqHeader() *ReqHeader {
	if m != nil {
		return m.ReqHeader
	}
	return nil
}

func (m *PigstyInfoRes) GetPigFarmId() string {
	if m != nil {
		return m.PigFarmId
	}
	return ""
}

func (m *PigstyInfoRes) GetFarmer() string {
	if m != nil {
		return m.Farmer
	}
	return ""
}

func (m *PigstyInfoRes) GetPigHouseInfo() []*PigHouseInfo {
	if m != nil {
		return m.PigHouseInfo
	}
	return nil
}

//LoadReq
type LoadReq struct {
	//Version ,Devid ,Timestamp
	ReqHeader *ReqHeader `protobuf:"bytes,1,opt,name=ReqHeader,proto3" json:"ReqHeader,omitempty"`
	//当前重量
	CurrentWeight        string   `protobuf:"bytes,2,opt,name=CurrentWeight,proto3" json:"CurrentWeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadReq) Reset()         { *m = LoadReq{} }
func (m *LoadReq) String() string { return proto.CompactTextString(m) }
func (*LoadReq) ProtoMessage()    {}
func (*LoadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{4}
}

func (m *LoadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadReq.Unmarshal(m, b)
}
func (m *LoadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadReq.Marshal(b, m, deterministic)
}
func (m *LoadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadReq.Merge(m, src)
}
func (m *LoadReq) XXX_Size() int {
	return xxx_messageInfo_LoadReq.Size(m)
}
func (m *LoadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoadReq proto.InternalMessageInfo

func (m *LoadReq) GetReqHeader() *ReqHeader {
	if m != nil {
		return m.ReqHeader
	}
	return nil
}

func (m *LoadReq) GetCurrentWeight() string {
	if m != nil {
		return m.CurrentWeight
	}
	return ""
}

//ChoosePigstyReq
//称在一秒内6次上传当前重量,重量选取算法：
//如果一秒内的重量变化（小于0.5kg），那么上传当前重量。
//如果下一秒的数据无变化，那么不上传数据。
type ScaleDevRawData struct {
	//当前猪圈
	PigstyId string `protobuf:"bytes,1,opt,name=PigstyId,proto3" json:"PigstyId,omitempty"`
	//当前重量，重量采用“克”为单位
	CurrentWeight        string                  `protobuf:"bytes,2,opt,name=CurrentWeight,proto3" json:"CurrentWeight,omitempty"`
	Type                 ScaleDevRawData_CmdType `protobuf:"varint,3,opt,name=type,proto3,enum=fsapi.ScaleDevRawData_CmdType" json:"type,omitempty"`
	Timestamp            int32                   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ScaleDevRawData) Reset()         { *m = ScaleDevRawData{} }
func (m *ScaleDevRawData) String() string { return proto.CompactTextString(m) }
func (*ScaleDevRawData) ProtoMessage()    {}
func (*ScaleDevRawData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{5}
}

func (m *ScaleDevRawData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleDevRawData.Unmarshal(m, b)
}
func (m *ScaleDevRawData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleDevRawData.Marshal(b, m, deterministic)
}
func (m *ScaleDevRawData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleDevRawData.Merge(m, src)
}
func (m *ScaleDevRawData) XXX_Size() int {
	return xxx_messageInfo_ScaleDevRawData.Size(m)
}
func (m *ScaleDevRawData) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleDevRawData.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleDevRawData proto.InternalMessageInfo

func (m *ScaleDevRawData) GetPigstyId() string {
	if m != nil {
		return m.PigstyId
	}
	return ""
}

func (m *ScaleDevRawData) GetCurrentWeight() string {
	if m != nil {
		return m.CurrentWeight
	}
	return ""
}

func (m *ScaleDevRawData) GetType() ScaleDevRawData_CmdType {
	if m != nil {
		return m.Type
	}
	return ScaleDevRawData_UPLOAD_FODDER
}

func (m *ScaleDevRawData) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type UploadDevDateReq struct {
	//Version ,Devid ,Timestamp
	ReqHeader            *ReqHeader         `protobuf:"bytes,1,opt,name=ReqHeader,proto3" json:"ReqHeader,omitempty"`
	DevRawData           []*ScaleDevRawData `protobuf:"bytes,2,rep,name=DevRawData,proto3" json:"DevRawData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UploadDevDateReq) Reset()         { *m = UploadDevDateReq{} }
func (m *UploadDevDateReq) String() string { return proto.CompactTextString(m) }
func (*UploadDevDateReq) ProtoMessage()    {}
func (*UploadDevDateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{6}
}

func (m *UploadDevDateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadDevDateReq.Unmarshal(m, b)
}
func (m *UploadDevDateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadDevDateReq.Marshal(b, m, deterministic)
}
func (m *UploadDevDateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadDevDateReq.Merge(m, src)
}
func (m *UploadDevDateReq) XXX_Size() int {
	return xxx_messageInfo_UploadDevDateReq.Size(m)
}
func (m *UploadDevDateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadDevDateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadDevDateReq proto.InternalMessageInfo

func (m *UploadDevDateReq) GetReqHeader() *ReqHeader {
	if m != nil {
		return m.ReqHeader
	}
	return nil
}

func (m *UploadDevDateReq) GetDevRawData() []*ScaleDevRawData {
	if m != nil {
		return m.DevRawData
	}
	return nil
}

//CurrentFedRes
type CurrentFedRes struct {
	//error number ,error detail
	ResHeader *ResHeader `protobuf:"bytes,1,opt,name=ResHeader,proto3" json:"ResHeader,omitempty"`
	//当前猪圈
	PigstyId string `protobuf:"bytes,2,opt,name=PigstyId,proto3" json:"PigstyId,omitempty"`
	//已经喂料重量，重量采用“克”为单位
	FedWeight            string   `protobuf:"bytes,3,opt,name=FedWeight,proto3" json:"FedWeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentFedRes) Reset()         { *m = CurrentFedRes{} }
func (m *CurrentFedRes) String() string { return proto.CompactTextString(m) }
func (*CurrentFedRes) ProtoMessage()    {}
func (*CurrentFedRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1a5b6d85b3d9f79, []int{7}
}

func (m *CurrentFedRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentFedRes.Unmarshal(m, b)
}
func (m *CurrentFedRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentFedRes.Marshal(b, m, deterministic)
}
func (m *CurrentFedRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentFedRes.Merge(m, src)
}
func (m *CurrentFedRes) XXX_Size() int {
	return xxx_messageInfo_CurrentFedRes.Size(m)
}
func (m *CurrentFedRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentFedRes.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentFedRes proto.InternalMessageInfo

func (m *CurrentFedRes) GetResHeader() *ResHeader {
	if m != nil {
		return m.ResHeader
	}
	return nil
}

func (m *CurrentFedRes) GetPigstyId() string {
	if m != nil {
		return m.PigstyId
	}
	return ""
}

func (m *CurrentFedRes) GetFedWeight() string {
	if m != nil {
		return m.FedWeight
	}
	return ""
}

func init() {
	proto.RegisterEnum("fsapi.ScaleDevRawData_CmdType", ScaleDevRawData_CmdType_name, ScaleDevRawData_CmdType_value)
	proto.RegisterType((*PigstyInfo)(nil), "fsapi.PigstyInfo")
	proto.RegisterType((*PigHouseInfo)(nil), "fsapi.PigHouseInfo")
	proto.RegisterType((*DevInfoReq)(nil), "fsapi.DevInfoReq")
	proto.RegisterType((*PigstyInfoRes)(nil), "fsapi.PigstyInfoRes")
	proto.RegisterType((*LoadReq)(nil), "fsapi.LoadReq")
	proto.RegisterType((*ScaleDevRawData)(nil), "fsapi.ScaleDevRawData")
	proto.RegisterType((*UploadDevDateReq)(nil), "fsapi.UploadDevDateReq")
	proto.RegisterType((*CurrentFedRes)(nil), "fsapi.CurrentFedRes")
}

func init() { proto.RegisterFile("fs_gw.proto", fileDescriptor_d1a5b6d85b3d9f79) }

var fileDescriptor_d1a5b6d85b3d9f79 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x4e, 0x1a, 0x41,
	0x18, 0x65, 0x55, 0xc4, 0xfd, 0x00, 0xc5, 0xa9, 0xb1, 0x1b, 0x62, 0x1a, 0xb2, 0xe9, 0x05, 0x37,
	0x2e, 0x29, 0x4d, 0xeb, 0x4d, 0x93, 0xd6, 0xb2, 0x12, 0x4d, 0x48, 0xdd, 0x8c, 0x9a, 0x26, 0xed,
	0x05, 0x19, 0x99, 0x8f, 0x75, 0x12, 0x96, 0x59, 0x77, 0x16, 0x0c, 0x7d, 0xa8, 0x3e, 0x40, 0x9f,
	0xa3, 0x0f, 0xd2, 0x47, 0x68, 0x98, 0x5d, 0x76, 0x41, 0xdb, 0xa6, 0x7a, 0xc7, 0x39, 0x73, 0xf8,
	0x7e, 0xce, 0x9c, 0x59, 0x28, 0x0f, 0x55, 0xdf, 0xbf, 0x73, 0xc2, 0x48, 0xc6, 0x92, 0x14, 0x87,
	0x8a, 0x85, 0xa2, 0x5e, 0xf3, 0x47, 0xf2, 0x9a, 0x8d, 0xfa, 0x1c, 0x87, 0xc9, 0x81, 0xfd, 0xc3,
	0x00, 0xf0, 0x84, 0xaf, 0xe2, 0xd9, 0xd9, 0x78, 0x28, 0x49, 0x1d, 0xb6, 0x52, 0xc4, 0x2d, 0xa3,
	0x61, 0x34, 0x4d, 0x9a, 0x61, 0xb2, 0x0f, 0x9b, 0x9e, 0xf0, 0x3f, 0x4d, 0x02, 0x6b, 0xad, 0x61,
	0x34, 0xab, 0x34, 0x45, 0xe4, 0x25, 0x54, 0x8f, 0xa7, 0x18, 0x31, 0x1f, 0x3f, 0xa3, 0xf0, 0x6f,
	0x62, 0x6b, 0x5d, 0x1f, 0xaf, 0x92, 0xc4, 0x86, 0xca, 0x31, 0x9f, 0x0a, 0xb5, 0x10, 0x6d, 0x68,
	0xd1, 0x0a, 0x47, 0x2c, 0x28, 0xf5, 0x98, 0x8a, 0xbb, 0xc8, 0xad, 0xa2, 0x3e, 0x5e, 0x40, 0xb2,
	0x07, 0x45, 0x4f, 0xf8, 0x67, 0xdc, 0xda, 0x6c, 0xac, 0x37, 0x4d, 0x9a, 0x00, 0xfb, 0x2b, 0x54,
	0x3c, 0xe1, 0x9f, 0xca, 0x89, 0x42, 0x3d, 0xbd, 0x05, 0xa5, 0x04, 0x2c, 0x86, 0x5f, 0x40, 0xf2,
	0x0a, 0x20, 0xcc, 0xb6, 0xb4, 0xd6, 0x1a, 0xeb, 0xcd, 0x72, 0x7b, 0xd7, 0xd1, 0xa6, 0x38, 0xf9,
	0xfa, 0x74, 0x49, 0x64, 0xbf, 0x03, 0x70, 0x71, 0xaa, 0x69, 0xbc, 0x25, 0x0e, 0x98, 0x14, 0x6f,
	0x4f, 0x91, 0x71, 0x8c, 0x74, 0xf1, 0x72, 0xbb, 0x96, 0xfe, 0x3f, 0xe3, 0x69, 0x2e, 0xb1, 0xbf,
	0x1b, 0x50, 0x5d, 0x2a, 0x8c, 0xea, 0xb1, 0x15, 0xc8, 0x01, 0x98, 0x9e, 0xf0, 0xbb, 0x2c, 0x0a,
	0xce, 0xb8, 0x76, 0xdc, 0xa4, 0x39, 0x31, 0xbf, 0x8c, 0x21, 0x8b, 0x02, 0x8c, 0xb4, 0xdb, 0x26,
	0x4d, 0x11, 0x39, 0x82, 0x4a, 0xb8, 0x64, 0x89, 0xb5, 0xa1, 0x57, 0x7d, 0x96, 0xaf, 0x9a, 0x1d,
	0xd1, 0x15, 0xa1, 0xdd, 0x87, 0x52, 0x4f, 0x32, 0xfe, 0x84, 0x5d, 0xe7, 0x01, 0xe8, 0x4c, 0xa2,
	0x08, 0xc7, 0x71, 0x7a, 0xb7, 0xc9, 0xb4, 0xab, 0xa4, 0xfd, 0xd3, 0x80, 0x9d, 0x8b, 0x01, 0x1b,
	0xa1, 0x8b, 0x53, 0xca, 0xee, 0x5c, 0x16, 0xb3, 0x7f, 0xc6, 0xed, 0xbf, 0xaa, 0x92, 0x36, 0x6c,
	0xc4, 0xb3, 0x10, 0xb5, 0x0b, 0xdb, 0xed, 0x17, 0xe9, 0x98, 0xf7, 0xfa, 0x38, 0x9d, 0x80, 0x5f,
	0xce, 0x42, 0xa4, 0x5a, 0x3b, 0x77, 0xf6, 0x52, 0x04, 0xa8, 0x62, 0x16, 0x84, 0x3a, 0x87, 0x45,
	0x9a, 0x13, 0xf6, 0x21, 0x94, 0x52, 0x39, 0xd9, 0x85, 0xea, 0x95, 0xd7, 0x3b, 0x3f, 0x76, 0xfb,
	0xdd, 0x73, 0xd7, 0x3d, 0xa1, 0xb5, 0x02, 0xd9, 0x81, 0x72, 0xf7, 0xe4, 0x24, 0x23, 0x0c, 0xfb,
	0x1b, 0xd4, 0xae, 0xc2, 0x91, 0x64, 0xdc, 0xc5, 0xa9, 0xcb, 0x62, 0x7c, 0x8a, 0x81, 0x6f, 0x75,
	0xd4, 0xd2, 0x61, 0xd3, 0x74, 0xee, 0xff, 0x79, 0x15, 0xba, 0xa4, 0xb4, 0x67, 0x99, 0x45, 0x5d,
	0xe4, 0x59, 0xc6, 0xd4, 0x5f, 0x1a, 0xab, 0xbc, 0x71, 0xfa, 0x73, 0xc5, 0xff, 0xb5, 0x7b, 0xfe,
	0x1f, 0x80, 0xd9, 0x45, 0xbe, 0xf4, 0xa4, 0x4d, 0x9a, 0x13, 0xed, 0x5f, 0x06, 0x14, 0xbb, 0xca,
	0x63, 0x9c, 0xbc, 0x81, 0x2d, 0x8f, 0xf1, 0x9e, 0xf4, 0xc5, 0x98, 0x2c, 0x9e, 0x54, 0xfe, 0x70,
	0xea, 0x7b, 0x0f, 0x5f, 0x19, 0x2a, 0xbb, 0x40, 0x0e, 0x93, 0xbc, 0x75, 0x02, 0x4e, 0xb6, 0x53,
	0x49, 0x9a, 0xbf, 0xfa, 0x83, 0x91, 0xed, 0x02, 0x79, 0x0f, 0x95, 0xce, 0x8d, 0x94, 0x0a, 0x93,
	0x3a, 0xe4, 0x79, 0xaa, 0xb9, 0xef, 0x7d, 0xd6, 0x6f, 0xc5, 0x18, 0xbb, 0x40, 0x3e, 0x40, 0x35,
	0xd1, 0x52, 0x76, 0xa7, 0x3f, 0x16, 0x8f, 0xad, 0xf0, 0xf1, 0x02, 0xac, 0xc1, 0xd8, 0x11, 0x32,
	0x14, 0xbe, 0x33, 0x44, 0xe4, 0x8e, 0x9a, 0x5f, 0x8d, 0xe3, 0x47, 0xe1, 0xe0, 0xcb, 0x91, 0x2f,
	0xe2, 0x9b, 0xc9, 0xb5, 0x33, 0x90, 0x41, 0x4b, 0x2b, 0x5a, 0x73, 0xc5, 0xa1, 0x56, 0xb4, 0xc4,
	0x38, 0xc6, 0x68, 0xc8, 0x06, 0xd8, 0x9a, 0x6b, 0x5b, 0xbe, 0xec, 0xcb, 0x49, 0xdc, 0xd2, 0x4d,
	0xae, 0x37, 0xf5, 0x67, 0xf8, 0xf5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xad, 0x6d, 0xa5, 0x7d,
	0xae, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FsPadClient is the client API for FsPad service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FsPadClient interface {
	//PAD 登录
	PadLogin(ctx context.Context, in *DevInfoReq, opts ...grpc.CallOption) (*PigstyInfoRes, error)
	//上料命令
	LoadCmd(ctx context.Context, in *LoadReq, opts ...grpc.CallOption) (*ResHeader, error)
	//选择猪圈
	ChoosePigsty(ctx context.Context, in *UploadDevDateReq, opts ...grpc.CallOption) (*CurrentFedRes, error)
	//上传当前重量
	UploadRawInfo(ctx context.Context, in *UploadDevDateReq, opts ...grpc.CallOption) (*CurrentFedRes, error)
}

type fsPadClient struct {
	cc *grpc.ClientConn
}

func NewFsPadClient(cc *grpc.ClientConn) FsPadClient {
	return &fsPadClient{cc}
}

func (c *fsPadClient) PadLogin(ctx context.Context, in *DevInfoReq, opts ...grpc.CallOption) (*PigstyInfoRes, error) {
	out := new(PigstyInfoRes)
	err := c.cc.Invoke(ctx, "/fsapi.FsPad/PadLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fsPadClient) LoadCmd(ctx context.Context, in *LoadReq, opts ...grpc.CallOption) (*ResHeader, error) {
	out := new(ResHeader)
	err := c.cc.Invoke(ctx, "/fsapi.FsPad/LoadCmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fsPadClient) ChoosePigsty(ctx context.Context, in *UploadDevDateReq, opts ...grpc.CallOption) (*CurrentFedRes, error) {
	out := new(CurrentFedRes)
	err := c.cc.Invoke(ctx, "/fsapi.FsPad/ChoosePigsty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fsPadClient) UploadRawInfo(ctx context.Context, in *UploadDevDateReq, opts ...grpc.CallOption) (*CurrentFedRes, error) {
	out := new(CurrentFedRes)
	err := c.cc.Invoke(ctx, "/fsapi.FsPad/UploadRawInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FsPadServer is the server API for FsPad service.
type FsPadServer interface {
	//PAD 登录
	PadLogin(context.Context, *DevInfoReq) (*PigstyInfoRes, error)
	//上料命令
	LoadCmd(context.Context, *LoadReq) (*ResHeader, error)
	//选择猪圈
	ChoosePigsty(context.Context, *UploadDevDateReq) (*CurrentFedRes, error)
	//上传当前重量
	UploadRawInfo(context.Context, *UploadDevDateReq) (*CurrentFedRes, error)
}

// UnimplementedFsPadServer can be embedded to have forward compatible implementations.
type UnimplementedFsPadServer struct {
}

func (*UnimplementedFsPadServer) PadLogin(ctx context.Context, req *DevInfoReq) (*PigstyInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PadLogin not implemented")
}
func (*UnimplementedFsPadServer) LoadCmd(ctx context.Context, req *LoadReq) (*ResHeader, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadCmd not implemented")
}
func (*UnimplementedFsPadServer) ChoosePigsty(ctx context.Context, req *UploadDevDateReq) (*CurrentFedRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChoosePigsty not implemented")
}
func (*UnimplementedFsPadServer) UploadRawInfo(ctx context.Context, req *UploadDevDateReq) (*CurrentFedRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadRawInfo not implemented")
}

func RegisterFsPadServer(s *grpc.Server, srv FsPadServer) {
	s.RegisterService(&_FsPad_serviceDesc, srv)
}

func _FsPad_PadLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FsPadServer).PadLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fsapi.FsPad/PadLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FsPadServer).PadLogin(ctx, req.(*DevInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FsPad_LoadCmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FsPadServer).LoadCmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fsapi.FsPad/LoadCmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FsPadServer).LoadCmd(ctx, req.(*LoadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FsPad_ChoosePigsty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadDevDateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FsPadServer).ChoosePigsty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fsapi.FsPad/ChoosePigsty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FsPadServer).ChoosePigsty(ctx, req.(*UploadDevDateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FsPad_UploadRawInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadDevDateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FsPadServer).UploadRawInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fsapi.FsPad/UploadRawInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FsPadServer).UploadRawInfo(ctx, req.(*UploadDevDateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FsPad_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fsapi.FsPad",
	HandlerType: (*FsPadServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PadLogin",
			Handler:    _FsPad_PadLogin_Handler,
		},
		{
			MethodName: "LoadCmd",
			Handler:    _FsPad_LoadCmd_Handler,
		},
		{
			MethodName: "ChoosePigsty",
			Handler:    _FsPad_ChoosePigsty_Handler,
		},
		{
			MethodName: "UploadRawInfo",
			Handler:    _FsPad_UploadRawInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fs_gw.proto",
}
